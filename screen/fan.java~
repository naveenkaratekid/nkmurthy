import javafx.application.*;
import javafx.event.*;
import javafx.geometry.*;
import javafx.scene.*;
import javafx.scene.control.*;
import javafx.scene.image.*;
import javafx.scene.layout.*;
import javafx.stage.*;
import javafx.beans.value.*;
import javafx.util.*;
import javafx.scene.shape.*;
import javafx.scene.paint.*;
import javafx.scene.text.*;
import javafx.animation.*;
import javafx.scene.media.*;
import javafx.beans.value.*;
import javafx.collections.*;
import javafx.event.*;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.beans.property.*;
import javafx.scene.media.*;

import java.io.File;
import java.io.FilenameFilter;
import java.util.*;
/**
 * Write a description of class fan here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class fan extends Application
{
    // instance variables - replace the example below with your own
    public void start(Stage s)
    {
          /* Driver Fan Speed */
        Slider s1 = new Slider();
        s1.setShowTickMarks(true);
        s1.setMin(0);
        s1.setMax(10);
        s1.setValue(1);
        s1.setShowTickLabels(true);
        s1.setMajorTickUnit(1);
        s1.setMinorTickCount(0);
        s1.setBlockIncrement(1);
        s1.setSnapToTicks(true);
        s1.setMinWidth(420);
        s1.setMinHeight(500);
        s1.setMaxWidth(420);
        s1.setMaxHeight(500);
        s1.setTranslateX(200);
        s1.setTranslateY(2500);
        s1.getStylesheets().add(this.getClass().getResource("styleFan.css").toExternalForm());
        s1.setStyle("-fx-font: 20px \"Arial\"; -fx-pref-height: 100; -fx-padding: 30;");
        s1.applyCss();

        
        /*  Fan Animation   */

        ImageView fanAnimate = new ImageView();
        Image fanAnim = new Image("fanicon.png");
        fanAnimate.setImage(fanAnim);
        fanAnimate.setTranslateX(100);
        fanAnimate.setTranslateY(2500);
        
        RotateTransition rt = new RotateTransition();
        rt.setCycleCount(Animation.INDEFINITE);
        rt.setNode(fanAnimate);
        rt.setByAngle(360);
        rt.setAutoReverse(false);
        //rt.play();
        
        s1.valueProperty().addListener(new ChangeListener<Number>() 
        {
            public void changed(ObservableValue<? extends Number> ov, Number old_val, Number new_val) 
            {
                rt.setRate(s1.getValue());
                rt.play();
            }
        }
        );
        
        VBox root3 = new VBox(10);
        Scene scene = new Scene(root3);
        root3.getChildren().addAll(s1, fanAnimate);
        s.setWidth(1500);
        s.setHeight(900);
        s.show();
    }
    
    public static void main(String[] args)
    {
        launch(args);
    }
}
